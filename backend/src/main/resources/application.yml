spring:
#  h2:
#    console:
#      enabled: true
#      path: /h2
#      settings:
#        web-allow-others: true
#  datasource:
#    url: jdbc:h2:mem:test
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update # 배포 후 운영 시에는 다른 방법 사용해야 한다.
    show-sql: true
    properties: # 예쁘게 보기
      hibernate:
        format_sql: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher # swagger
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
admin:
  email: ${EMAIL_USERNAME}
cloud:
  aws:
    s3:
      bucket:
        mentor-bucket: ${AWS_MENTOR_BUCKET}
        profile-bucket: ${AWS_PROFILE_BUCKET}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    #      access-key-img: ${AWS_ACCESS_IMG_KEY}
    #      secret-key-img: ${AWS_SECRET_IMG_KEY}
    #      access-key-file: ${AWS_ACCESS_FILE_KEY}
    #      secret-key-file: ${AWS_SECRET_FILE_KEY}
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
springdoc:
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  swagger-ui:
    enabled: true
    groups-order: asc
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  default-produces-media-type: application/json


jwt:
  secret-key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: ${JWT_ACCESS_EXPIRATION}
  refresh-token-expiration-minutes: ${JWT_REFRESH_EXPIRATION}
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health
#      base-path: /idoc